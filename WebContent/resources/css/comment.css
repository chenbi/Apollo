
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
 
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.Toolbar
 */
/**
 * @var {color} $toolbar-base-color
 * The primary color variable from which toolbars derive their light and dark UIs.
 */
/**
 * @var {measurement} $toolbar-spacing
 * Space between items in a toolbar (like buttons and fields)
 */
/**
 * @var {string} $toolbar-gradient
 * Background gradient style for toolbars.
 */
/**
 * @var {boolean} $include-toolbar-uis
 * Optionally disable separate toolbar UIs (light and dark).
 */
/**
 * Includes default toolbar styles.
 */
/**
 * Creates a theme UI for toolbars.
 *
 *     // SCSS
 *     @include sencha-toolbar-ui('sub', #58710D, 'glossy');
 *
 *     // JS
 *     var myTb = new Ext.Toolbar({title: 'My Green Glossy Toolbar', ui: 'sub'})
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $color Base color for the UI.
 * @param {string} $gradient: $toolbar-gradien Background gradient style for the UI.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.Button
 */
/**
 * @var {measurement} $button-height Default height for buttons.
 */
/**
 * @var {measurement} $button-radius Default border-radius for buttons.
 */
/**
 * @var {measurement} $button-stroke-weight Default border width for buttons.
 */
/**
 * @var {string} $button-gradient Default gradient for buttons.
 *
 * See {@link Global_CSS#background-gradient background-gradient}.
 */
/**
 * @var {string} $toolbar-icon-size Default size (width and height) for toolbar icons.
 */
/**
 * @var {boolean} $include-button-uis Optionally disable separate button UIs, including action, confirm, and decline.
 */
/**
 * @var {boolean} $include-button-highlights Optionally disable special CSS3 effects on buttons including gradients, text-shadows, and box-shadows.
 */
/**
 * Includes default button styles.
 *
 * See {@link Global_CSS#background-gradient background-gradient}.
 */
/**
 * Creates a theme UI for buttons.
 * Also automatically generates UIs for {ui-label}-round and {ui-label}-small.
 *
 *     // SCSS
 *     @include sencha-button-ui('secondary', #99A4AE, 'glossy');
 *
 *     // JS
 *     var cancelBtn = new Ext.Button({text: 'Cancel', ui: 'secondary'});
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $color Base color for the UI.
 * @param {string} $gradient Default gradient for the UI.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.tab.Bar
 */
/**
 * @var {boolean} $include-tabbar-uis Optionally disable separate tabbar UIs (light and dark).
 */
/**
 * @var {boolean} $include-top-tabs
 * Optionally exclude top tab styles by setting to false.
 */
/**
 * @var {boolean} $include-bottom-tabs
 * Optionally exclude bottom tab styles by setting to false.
 */
/**
 * @var {color} $tabs-light
 * Base color for "light" UI tabs.
 */
/**
 * @var {color} $tabs-light-active
 * Active color for "light" UI tabs.
 */
/**
 * @var {color} $tabs-dark
 * Base color for "dark" UI tabs.
 */
/**
 * @var {color} $tabs-dark-active
 * Active color for "dark" UI tabs.
 */
/**
 * @var {string} $tabs-bar-gradient
 * Background gradient style for tab bars.
 */
/**
 * @class Ext.tab.Tab
 */
/**
 * @var {string} $tabs-bottom-radius
 * Border-radius for bottom tabs.
 */
/**
 * @var {string} $tabs-bottom-icon-size
 * Icon size for bottom tabs
 */
/**
 * @var {string} $tabs-bottom-active-gradient
 * Background gradient style for active bottom tabs.
 */
/**
 * @var {boolean} $include-tab-highlights
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * Includes default tab styles.
 *
 * @member Ext.tab.Bar
 */
/**
 * Creates a theme UI for tabbar/tab components.
 *
 *     // SCSS
 *     @include sencha-button-ui('pink', #333, 'matte', #AE537A);
 *
 *     // JS
 *     var tabs = new Ext.tab.Panel({
 *        tabBar: {
 *          ui: 'pink',
 *          dock: 'bottom',
 *          layout: { pack: 'center' }
 *        },
 *        ...
 *     });
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $bar-color Base color for the tab bar.
 * @param {string} $bar-gradient Background gradient style for the tab bar.
 * @param {color} $tab-active-color Background-color for active tab icons.
 *
 * @member Ext.tab.Bar
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.carousel.Indicator
 */
/**
 * @var {measurement} $carousel-indicator-size Size (width/height) of carousel indicator dots.
 */
/**
 * @var {measurement} $carousel-indicator-spacing
 * Amount of space between carousel indicator dots.
 */
/**
 * @var {measurement} $carousel-track-size Size of the track the carousel indicator dots are in.
 */
/**
 * Creates a theme UI for carousel indicator components.
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $color Base color for the UI.
 * @param {string} $gradient Default gradient for the UI.
 * @param {color} $active-color Active color for the UI.
 * @param {string} $active-gradient Active gradient for the UI.
 */
/**
 * @class Ext.carousel.Carousel
 */
/**
 * Includes basic carousel formatting.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.dataview.IndexBar
 */
/**
 * @var {measurement} $index-bar-width
 * Width of the index bar.
 */
/**
 * @var {color} $index-bar-bg-color
 * Background-color of the index bar.
 */
/**
 * @var {color} $index-bar-color
 * Text color of the index bar.
 */
/**
 * Includes default index bar styles.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.dataview.List
 */
/**
 * @var {color} $list-color
 * Text color for list rows.
 */
/**
 * @var {color} $list-bg-color
 * Background-color for list rows.
 */
/**
 * @var {color} $include-list-highlights
 * Optionally disable all list gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $list-zebrastripe
 * Optionally zebra-stripe the list (alternating background colors).
 */
/**
 * @var {color} $list-pressed-color
 * Background-color for pressed list rows.
 */
/**
 * @var {color} $list-active-color
 * Background-color for selected list rows.
 */
/**
 * @var {string} $list-active-gradient
 * Gradient style for selected list rows.
 */
/**
 * @var {color} $list-header-bg-color
 * Background-color for list header rows (in grouped lists).
 */
/**
 * @var {string} $list-header-gradient
 * Gradient style for list header rows (in grouped lists).
 *
 * See {@link Global_CSS#background-gradient background-gradient}.
 */
/**
 * @var {measurement} $list-disclosure-size
 * Default size (width/height) for disclosure icons.
 */
/**
 * @var {measurement} $list-disclosure-round-size
 * Default size (width/height) for disclosure icons in a list with a 'round' ui.
 */
/**
 * Includes default list styles.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * Includes default form slider styles.
 *
 * @member Ext.field.Slider
 */
/**
 * @var {color} $form-bg-color
 * Default background-color for forms.
 *
 * @member Ext.form.Panel
 */
/**
 * @class Ext.field.Field
 */
/**
 * @var {color} $form-field-bg-color
 * Default background-color for form fields.
 */
/**
 * @var {color} $form-light
 * Light color for form fields, mostly used on field borders.
 */
/**
 * @var {color} $form-dark
 * Dark color for form fields, mostly used on labels/text.
 */
/**
 * @var {measurement} $form-label-width
 * Default width for form labels.
 */
/**
 * @var {color} $form-label-background-color
 * The default background color for labels
 */
/**
 * @var {measurement} $form-field-height
 * Default height for form fields.
 */
/**
 * @var {measurement} $form-spacing
 * Default spacing for form fields, used for padding, etc.
 */
/**
 * @var {measurement} $form-textarea-height
 * Default height for form textareas.
 *
 * @member Ext.field.TextArea
 */
/**
 * @var {measurement} $form-thumb-size
 * Default size of "thumbs" for form sliders/toggles.
 *
 * @member Ext.field.Slider
 */
/**
 * @var {measurement} $form-toggle-size
 * Thumb size minus padding for inset thumbs like in a Toggle element.
 *
 * @member Ext.field.Toggle
 */
/**
 * @var {measurement} $form-fieldset-radius
 * Default border-radius for form fieldsets.
 *
 * @member Ext.form.FieldSet
 */
/**
 * @var {measurement} $form-slider-size
 * Height of the slider "track."
 *
 * @member Ext.field.Slider
 */
/**
 * Includes default form styles.
 *
 * See {@link Global_CSS#background-gradient background-gradient}.
 *
 * @member Ext.form.Panel
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.Sheet
 */
/**
 * @var {color} $sheet-bg-color
 * Background-color for action sheets and message boxes.
 */
/**
 * @var {color} $sheet-bg-gradient
 * Background gradient style for action sheets and message boxes.
 */
/**
 * @var {measurement} $sheet-button-spacing
 * Vertical spacing between sheet buttons.
 */
/**
 * @var {measurement} $sheet-padding
 * Overall padding in a sheet.
 */
/**
 * Includes default sheet styles (also required for message box).
 */
/**
 * Includes default message box styles.
 *
 * @member Ext.MessageBox
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.field.Field
 */
/**
 * @var {color} $toolbar-input-bg
 * Background-color for toolbar form fields.
 */
/**
 * @var {color} $toolbar-input-color
 * Text color for toolbar form fields.
 */
/**
 * @var {measurement} $toolbar-input-height
 * Text color for toolbar form fields.
 */
/**
 * @var {color} $toolbar-input-border-color
 * Border color for toolbar form fields.
 */
/**
 * Includes default toolbar form field styles.
 *
 * @member Ext.tab.Bar
 */
/**
 * @class Ext.LoadMask
 */
/**
 * @var {color} $loading-spinner-color
 * Background-color for the bars in the loading spinner.
 */
/**
 * Includes default loading spinner styles (for dataviews).
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/* line 3, ../themes/stylesheets/sencha-touch/default/widgets/_img.scss */
.x-img {
  background-repeat: no-repeat;
}

/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * @class Global_CSS
 */
/**
 * Add a background gradient to a selector.
 *
 *     .my-element {
 *       @include background-gradient(green, 'recessed')
 *     }
 *
 * @param {color} $bg-color The base color of the gradient.
 * @param {string} $type The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */